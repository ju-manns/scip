name: Build SCIP from source


on:
  push:
    branches:
      - '**'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false # do not stop all builds if one fails
      matrix:
        os: [ubuntu-latest]


    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      if: matrix.os == 'windows-latest'

    - name: Install dependencies for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install gcc g++ gfortran git patch wget pkg-config liblapack-dev libmetis-dev unzip zip build-essential libscalapack-mpi-dev
      shell: bash

    - name: Instance dependencies for Mac
      if: matrix.os == 'macos-latest'
      run: |
        brew install bash
        brew upgrade cmake
        brew install unzip
      shell: bash

    - name: Install Visual Studio 2019 for Windows
      if: matrix.os == 'windows-latest'
      run: |
        # choco install visualstudio2019buildtools -y
        # choco install visualstudio2019-workload-vctools -y
        ls "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
        echo $env:PATH
      shell: pwsh

    - name: Install dependencies for Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo $PATH
        ls "/c/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/"
        # pacman -S --noconfirm unzip git mingw-w64-x86_64-gcc mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-cmake cmake make
        pacman -S --noconfirm unzip git mingw-w64-x86_64-cmake cmake mingw-w64-x86_64-zlib
      shell: msys2 {0}

    - name: Install GMP for Mac
      if: matrix.os == 'None'
      run: |
        wget https://github.com/pmmp/DependencyMirror/releases/download/mirror/gmp-6.3.0.tar.xz
        tar xvf gmp-6.3.0.tar.xz
        mkdir $GITHUB_WORKSPACE/gmplib
        cd gmp-6.3.0
        ./configure --with-pic --enable-cxx --prefix=$GITHUB_WORKSPACE/gmplib
        make install -j
      shell: bash

    - name: Download IPOPT for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://github.com/coin-or/Ipopt/archive/refs/tags/releases/3.14.12.zip
        unzip 3.14.12.zip
        mkdir $GITHUB_WORKSPACE/ipopt
        mkdir $GITHUB_WORKSPACE/ipopt/share
        echo 'enable_shared=no
        enable_java=no
        enable_sipopt=no
        with_pic=yes
        with_metis_cflags="-I$GITHUB_WORKSPACE/metis/include"
        with_metis_lflags="-L$GITHUB_WORKSPACE/metis/lib -lmetis -lm"
        with_lapack="-L/usr/lib/x86_64-linux-gnu/ -llapack -lblas -lgfortran -lquadmath -lm"
        LT_LDFLAGS=-all-static
        LDFLAGS=-static' > $GITHUB_WORKSPACE/ipopt/share/config.site
      shell: bash

    - name: Download IPOPT for Mac
      if: matrix.os == 'macos-latest'
      run: |
        wget https://github.com/coin-or/Ipopt/archive/refs/tags/releases/3.14.12.zip
        unzip 3.14.12.zip
        mkdir $GITHUB_WORKSPACE/ipopt
        mkdir $GITHUB_WORKSPACE/ipopt/share
        echo 'enable_shared=no
        enable_java=no
        enable_sipopt=no
        with_pic=yes
        with_metis_cflags="-I$GITHUB_WORKSPACE/metis/include"
        with_metis_lflags="-L$GITHUB_WORKSPACE/metis/lib -lmetis"' > $GITHUB_WORKSPACE/ipopt/share/config.site
      shell: bash

    - name: Download IPOPT for Windows
      if: matrix.os == 'windows-latest'
      run: |
        wget https://github.com/coin-or/Ipopt/releases/download/releases%2F3.14.12/Ipopt-3.14.12-win64-msvs2019-md.zip
        unzip Ipopt-3.14.12-win64-msvs2019-md.zip
        mv Ipopt-3.14.12-win64-msvs2019-md/lib/ipopt.dll.lib Ipopt-3.14.12-win64-msvs2019-md/lib/ipopt.lib
      shell: msys2 {0}
        

    - name: Download and install metis for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://github.com/KarypisLab/METIS/archive/refs/heads/master.zip
        unzip master.zip
        rm master.zip
        wget https://github.com/KarypisLab/GKlib/archive/refs/heads/master.zip
        unzip master.zip
        rm master.zip
        mkdir $GITHUB_WORKSPACE/gklib-install
        cd GKlib-master
        make config prefix=$GITHUB_WORKSPACE/gklib-install 
        make
        make install
        cd ..
        mkdir $GITHUB_WORKSPACE/metis
        cd METIS-master
        make config prefix=$GITHUB_WORKSPACE/metis/ gklib_path=$GITHUB_WORKSPACE/gklib-install
        make install
      shell: bash

    - name: Download and install metis for Mac
      if: matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        wget https://github.com/KarypisLab/METIS/archive/refs/heads/master.zip
        unzip master.zip
        rm master.zip
        mkdir $GITHUB_WORKSPACE/metis
        cd METIS-master
        make config prefix=$GITHUB_WORKSPACE/metis/
        make install
      shell: bash
        
    - name: Download and install Mumps for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        git clone https://github.com/coin-or-tools/ThirdParty-Mumps.git
        cd ThirdParty-Mumps
        ./get.Mumps
        which gcc
        gcc --version
        ./configure --enable-shared=no --enable-static=yes --prefix=$GITHUB_WORKSPACE/ipopt
        make
        make install
      shell: bash

    - name: Download and install Mumps for Mac
      if: matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        export FC=/usr/local/bin/gfortran-13
        git clone https://github.com/coin-or-tools/ThirdParty-Mumps.git
        cd ThirdParty-Mumps
        ./get.Mumps
        ./configure --enable-shared=no --enable-static=yes --prefix=$GITHUB_WORKSPACE/ipopt
        make
        make install
      shell: bash
      
    - name: Install IPOPT for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd Ipopt-releases-3.14.12
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/ipopt/
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Install IPOPT for Mac
      if: matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        export FC=/usr/local/bin/gfortran-13
        cd Ipopt-releases-3.14.12
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/ipopt/
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Download and install SOPLEX for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        git clone https://github.com/scipopt/soplex.git
        cd soplex
        mkdir build
        mkdir $GITHUB_WORKSPACE/soplex_install
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/soplex_install -DCMAKE_BUILD_TYPE=Release -DPAPILO=false
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Download and install SOPLEX for Mac
      if: matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        export FC=/usr/local/bin/gfortran-13
        git clone https://github.com/scipopt/soplex.git
        cd soplex
        mkdir build
        mkdir $GITHUB_WORKSPACE/soplex_install
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/soplex_install -DCMAKE_BUILD_TYPE=Release -DPAPILO=false
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Download and install SOPLEX for Windows
      if: matrix.os == 'windows-latest'
      run: |
        git clone https://github.com/scipopt/soplex.git
        cd soplex
        mkdir $GITHUB_WORKSPACE/soplex_install
        mkdir $GITHUB_WORKSPACE/soplex_build
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/Tools"
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64"
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin"
        cmake -G "Visual Studio 17 2022" -B $GITHUB_WORKSPACE/soplex_build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/soplex_install -DCMAKE_BUILD_TYPE=Release -DPAPILO=false -DZLIB=false
        cmake --build $GITHUB_WORKSPACE/soplex_build --config Release
        cmake --install $GITHUB_WORKSPACE/soplex_build
      shell: msys2 {0}

    - name: Download and install SCIP for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir $GITHUB_WORKSPACE/scip_install
        git clone https://github.com/scipopt/scip.git
        cd scip
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/scip_install -DCMAKE_BUILD_TYPE=Release -DLPS=spx -DSOPLEX_DIR=$GITHUB_WORKSPACE/soplex_install -DPAPILO=false -DZIMPL=false -DIPOPT=true -DIPOPT_DIR=$GITHUB_WORKSPACE/ipopt
        make -j$(nproc)
        make install
      shell: bash

    - name: Download and install SCIP for Mac
      if:  matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        export FC=/usr/local/bin/gfortran-13
        mkdir $GITHUB_WORKSPACE/scip_install
        git clone https://github.com/scipopt/scip.git
        cd scip
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/scip_install -DCMAKE_BUILD_TYPE=Release -DLPS=spx -DSOPLEX_DIR=$GITHUB_WORKSPACE/soplex_install -DPAPILO=false -DZIMPL=false -DIPOPT=true -DIPOPT_DIR=$GITHUB_WORKSPACE/ipopt
        make -j$(nproc)
        make install
      shell: bash

    - name: Download and install SCIP for Windows
      if: matrix.os == 'windows-latest'
      run: |
        mkdir $GITHUB_WORKSPACE/scip_install
        mkdir $GITHUB_WORKSPACE/scip_build
        git clone https://github.com/scipopt/scip.git
        cd scip
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/Tools"
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64"
        export PATH="$PATH:/c/Program Files/Microsoft Visual Studio/2022/Enterprise/MSBuild/Current/Bin"
        cmake -G "Visual Studio 17 2022" -B $GITHUB_WORKSPACE/scip_build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/scip_install -DCMAKE_BUILD_TYPE=Release -DLPS=spx -DSOPLEX_DIR=$GITHUB_WORKSPACE/soplex_install -DPAPILO=false -DZIMPL=false -DZLIB=false -DREADLINE=false -DGMP=false -DIPOPT=true -DIPOPT_DIR=$GITHUB_WORKSPACE/Ipopt-3.14.12-win64-msvs2019-md/ -DIPOPT_LIBRARIES=$GITHUB_WORKSPACE/Ipopt-3.14.12-win64-msvs2019-md/bin
        cmake --build $GITHUB_WORKSPACE/scip_build --config Release
        cmake --install $GITHUB_WORKSPACE/scip_build
      shell: msys2 {0}
    
