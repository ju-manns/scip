name: Build SCIP from source


on:
  push:
    branches:
      - '**'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false # do not stop all builds if one fails
      matrix:
        os: [macos-latest]


    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install gcc g++ gfortran git patch wget pkg-config liblapack-dev libmetis-dev unzip zip build-essential libscalapack-mpi-dev
      shell: bash

    - name: Instance dependencies for Mac
      if: matrix.os == 'macos-latest'
      run: |
        brew install bash
      shell: bash

    - name: Install GMP for Mac
      if: matrix.os == 'None'
      run: |
        wget https://github.com/pmmp/DependencyMirror/releases/download/mirror/gmp-6.3.0.tar.xz
        tar xvf gmp-6.3.0.tar.xz
        mkdir $GITHUB_WORKSPACE/gmplib
        cd gmp-6.3.0
        ./configure --with-pic --enable-cxx --prefix=$GITHUB_WORKSPACE/gmplib
        make install -j
      shell: bash

    - name: Download IPOPT for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://github.com/coin-or/Ipopt/archive/refs/tags/releases/3.14.12.zip
        unzip 3.14.12.zip
        mkdir $GITHUB_WORKSPACE/ipopt
        mkdir $GITHUB_WORKSPACE/ipopt/share
        echo 'enable_shared=no
        enable_java=no
        enable_sipopt=no
        with_pic=yes
        with_metis_cflags="-I$GITHUB_WORKSPACE/metis/include"
        with_metis_lflags="-L$GITHUB_WORKSPACE/metis/lib -lmetis -lm"
        with_lapack="-L/usr/lib/x86_64-linux-gnu/ -llapack -lblas -lgfortran -lquadmath -lm"
        LT_LDFLAGS=-all-static
        LDFLAGS=-static' > $GITHUB_WORKSPACE/ipopt/share/config.site
      shell: bash

    - name: Download IPOPT for Mac
      if: matrix.os == 'macos-latest'
      run: |
        wget https://github.com/coin-or/Ipopt/archive/refs/tags/releases/3.14.12.zip
        unzip 3.14.12.zip
        mkdir $GITHUB_WORKSPACE/ipopt
        mkdir $GITHUB_WORKSPACE/ipopt/share
        echo 'enable_shared=no
        enable_java=no
        enable_sipopt=no
        with_pic=yes
        with_metis_cflags="-I$GITHUB_WORKSPACE/metis/include"
        with_metis_lflags="-L$GITHUB_WORKSPACE/metis/lib -lmetis -lm"
        LT_LDFLAGS=-all-static
        LDFLAGS=-static' > $GITHUB_WORKSPACE/ipopt/share/config.site
      shell: bash

    - name: Download and install metis
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-5.1.0.tar.gz
        tar -xvf metis-5.1.0.tar.gz
        mkdir $GITHUB_WORKSPACE/metis
        cd metis-5.1.0
        make config prefix=$GITHUB_WORKSPACE/metis/
        make install
      shell: bash
        
    - name: Download and install Mumps for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        git clone https://github.com/coin-or-tools/ThirdParty-Mumps.git
        cd ThirdParty-Mumps
        ./get.Mumps
        which gcc
        gcc --version
        ./configure --enable-shared=no --enable-static=yes --prefix=$GITHUB_WORKSPACE/ipopt
        make
        make install
      shell: bash

    - name: Download and install Mumps for Mac
      if: matrix.os == 'macos-latest'
      run: |
        which gcc
        gcc --version
        /usr/local/bin/gcc-13 --version
        export CC=/usr/local/bin/gcc-13
        export CXX=/usr/local/bin/g++-13
        which gcc
        gcc --version
        git clone  https://github.com/coin-or-tools/ThirdParty-Mumps.git
        cd ThirdParty-Mumps
        ./get.Mumps
        ./configure --enable-shared=no --enable-static=yes --prefix=$GITHUB_WORKSPACE/ipopt
        make
        make install
      shell: bash
      
    - name: Install IPOPT
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        cd Ipopt-releases-3.14.12
        mkdir build
        cd build
        ../configure --prefix=$GITHUB_WORKSPACE/ipopt/
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Download and install SOPLEX
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        git clone https://github.com/scipopt/soplex.git
        cd soplex
        mkdir build
        mkdir $GITHUB_WORKSPACE/soplex_install
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/soplex_install -DCMAKE_BUILD_TYPE=Release -DPAPILO=false
        make -j$(nproc)
        make test
        make install
      shell: bash

    - name: Download and install SCIP
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        mkdir $GITHUB_WORKSPACE/scip_install
        git clone https://github.com/scipopt/scip.git
        cd scip
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/scip_install -DCMAKE_BUILD_TYPE=Release -DLPS=spx -DSOPLEX_DIR=$GITHUB_WORKSPACE/soplex_install -DPAPILO=false -DZIMPL=false -DIPOPT=true -DIPOPT_DIR=$GITHUB_WORKSPACE/ipopt
        make -j$(nproc)
        make install
      shell: bash
